"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[296],{7616:(e,t,s)=>{s.r(t),s.d(t,{assets:()=>c,contentTitle:()=>r,default:()=>p,frontMatter:()=>a,metadata:()=>n,toc:()=>l});const n=JSON.parse('{"id":"FAQ/Create a flow to capture multiple answers for a single question","title":"Create a flow to capture multiple answers for a single question","description":"While creating a program you might have a requirement to capture multiple answers for a single question. This requirement doesn&#39;t work with interactive messages but you can still use regular text to accomplish this.","source":"@site/docs/8. FAQ/18. Create a flow to capture multiple answers for a single question.md","sourceDirName":"8. FAQ","slug":"/FAQ/Create a flow to capture multiple answers for a single question","permalink":"/docs/docs/FAQ/Create a flow to capture multiple answers for a single question","draft":false,"unlisted":false,"editUrl":"https://github.com/glific/docs/tree/main/docs/8. FAQ/18. Create a flow to capture multiple answers for a single question.md","tags":[],"version":"current","sidebarPosition":18,"frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"","permalink":"/docs/docs/FAQ/Add bulk contacts to my Glific account"},"next":{"title":"Check WhatsApp Quality Rating and Messaging Limits","permalink":"/docs/docs/FAQ/Check WhatsApp Quality Rating and Messaging Limits"}}');var i=s(4848),o=s(8453);const a={},r=void 0,c={},l=[{value:"For Conditional Flow",id:"for-conditional-flow",level:2}];function u(e){const t={h2:"h2",img:"img",p:"p",...(0,o.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(t.p,{children:"While creating a program you might have a requirement to capture multiple answers for a single question. This requirement doesn't work with interactive messages but you can still use regular text to accomplish this."}),"\n",(0,i.jsx)(t.p,{children:"For multiple answers, it's always better to add a note and an input example that will help users to know how to answer in the correct way. For example,"}),"\n",(0,i.jsx)(t.p,{children:(0,i.jsx)(t.img,{src:"https://user-images.githubusercontent.com/32592458/220826281-76ac0b42-35c1-49d3-8783-e3f62f3bde6f.png",alt:"image"})}),"\n",(0,i.jsx)(t.p,{children:"And the Wait For Response can be something like this"}),"\n",(0,i.jsx)(t.p,{children:(0,i.jsx)(t.img,{src:"https://user-images.githubusercontent.com/32592458/220826296-6cd90fe4-4f03-4eb5-8c1f-3f498316f7e4.png",alt:"image"})}),"\n",(0,i.jsx)(t.p,{children:"Your message flow will look something like this"}),"\n",(0,i.jsx)(t.p,{children:(0,i.jsx)(t.img,{src:"https://user-images.githubusercontent.com/32592458/220826307-aba044ec-1550-40ac-8add-e63bdeca3698.png",alt:"image"})}),"\n",(0,i.jsx)(t.h2,{id:"for-conditional-flow",children:"For Conditional Flow"}),"\n",(0,i.jsx)(t.p,{children:"If you want to create a conditional flow with multiple answers, you can create your program like this."}),"\n",(0,i.jsx)(t.p,{children:(0,i.jsx)(t.img,{src:"https://user-images.githubusercontent.com/32592458/220826317-aacff5e4-ff75-4918-afe5-4765ec98d66c.png",alt:"image"})}),"\n",(0,i.jsx)(t.p,{children:"You can set the Wait For Response like this,"}),"\n",(0,i.jsx)(t.p,{children:(0,i.jsx)(t.img,{src:"https://user-images.githubusercontent.com/32592458/220826324-c19102ba-7cb9-457a-8434-15645628b409.png",alt:"image"})}),"\n",(0,i.jsx)(t.p,{children:"Your message flow will look like this"}),"\n",(0,i.jsx)(t.p,{children:(0,i.jsx)(t.img,{src:"https://user-images.githubusercontent.com/32592458/220826333-c172be29-8509-4445-b2bb-3da05ec99de4.png",alt:"image"})})]})}function p(e={}){const{wrapper:t}={...(0,o.R)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(u,{...e})}):u(e)}},8453:(e,t,s)=>{s.d(t,{R:()=>a,x:()=>r});var n=s(6540);const i={},o=n.createContext(i);function a(e){const t=n.useContext(o);return n.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function r(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:a(e.components),n.createElement(o.Provider,{value:t},e.children)}}}]);