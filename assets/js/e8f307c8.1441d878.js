"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[2669],{3905:(e,t,n)=>{n.d(t,{Zo:()=>d,kt:()=>g});var a=n(7294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function r(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,a,i=function(e,t){if(null==e)return{};var n,a,i={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var l=a.createContext({}),p=function(e){var t=a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):r(r({},t),e)),n},d=function(e){var t=p(e.components);return a.createElement(l.Provider,{value:t},e.children)},c="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},h=a.forwardRef((function(e,t){var n=e.components,i=e.mdxType,o=e.originalType,l=e.parentName,d=s(e,["components","mdxType","originalType","parentName"]),c=p(n),h=i,g=c["".concat(l,".").concat(h)]||c[h]||u[h]||o;return n?a.createElement(g,r(r({ref:t},d),{},{components:n})):a.createElement(g,r({ref:t},d))}));function g(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var o=n.length,r=new Array(o);r[0]=h;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s[c]="string"==typeof e?e:i,r[1]=s;for(var p=2;p<o;p++)r[p]=n[p];return a.createElement.apply(null,r)}return a.createElement.apply(null,n)}h.displayName="MDXCreateElement"},4488:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>r,default:()=>c,frontMatter:()=>o,metadata:()=>s,toc:()=>p});var a=n(7462),i=(n(7294),n(3905));const o={},r=void 0,s={unversionedId:"Integrations/ChatGPT Integration via Jugalbandi",id:"Integrations/ChatGPT Integration via Jugalbandi",title:"ChatGPT Integration via Jugalbandi",description:"### 3 minute read &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; Advanced",source:"@site/docs/4. Integrations/ChatGPT Integration via Jugalbandi.md",sourceDirName:"4. Integrations",slug:"/Integrations/ChatGPT Integration via Jugalbandi",permalink:"/docs/docs/Integrations/ChatGPT Integration via Jugalbandi",draft:!1,editUrl:"https://github.com/glific/docs/tree/main/docs/4. Integrations/ChatGPT Integration via Jugalbandi.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Bhashini ASR",permalink:"/docs/docs/Integrations/Bhashini ASR"},next:{title:"ChatGPT using OpenAI APIs",permalink:"/docs/docs/Integrations/ChatGPT using OpenAI APIs"}},l={},p=[{value:"Video Tutorial",id:"video-tutorial",level:2},{value:"Using ChatGPT within Glific via Jugalbandi API",id:"using-chatgpt-within-glific-via-jugalbandi-api",level:2},{value:"Pricing",id:"pricing",level:2},{value:"Advanced Feature Webinar",id:"advanced-feature-webinar",level:2}],d={toc:p};function c(e){let{components:t,...n}=e;return(0,i.kt)("wrapper",(0,a.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("blockquote",null,(0,i.kt)("h3",{parentName:"blockquote",id:"3-minute-read-------------------------------------------------------------advanced"},(0,i.kt)("strong",{parentName:"h3"},"3 minute read ","\xa0"," ","\xa0"," ","\xa0"," ","\xa0"," ","\xa0"," ","\xa0"," ","\xa0"," ","\xa0"," ","\xa0"," ","\xa0"," ","\xa0"," ","\xa0"," ","\xa0"," ","\xa0"," ","\xa0"," ","\xa0"," ","\xa0"," ","\xa0"," ","\xa0"," ","\xa0"," ","\xa0"," ","\xa0"," ","\xa0"," ","\xa0"," ","\xa0"," ","\xa0"," ","\xa0"," ","\xa0"," ","\xa0"," ","\xa0"," ","\xa0"," ","\xa0"," ","\xa0"," ","\xa0"," ","\xa0"," ","\xa0"," ","\xa0"," ","\xa0"," ","\xa0"," ","\xa0"," ","\xa0"," ","\xa0"," ","\xa0"," ","\xa0"," ","\xa0"," ","\xa0"," ","\xa0"," ","\xa0"," ","\xa0"," ","\xa0"," ","\xa0"," ","\xa0"," ","\xa0"," ","\xa0"," ","\xa0"," ","\xa0"," ","\xa0"," ","\xa0"," ","\xa0"," ","\xa0"," ",(0,i.kt)("inlineCode",{parentName:"strong"},"Advanced")))),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Leverage the capabilities of GPT models developed by OpenAI by using Jugalbandi APIs. Jugalbandi APIs is enhancing Glific by providing Retreival Augemented Generation or in simple words, enabling NGOs to use custom knowledge base for GPT models to answer from.")),(0,i.kt)("h2",{id:"video-tutorial"},"Video Tutorial"),(0,i.kt)("iframe",{width:"800",height:"500",src:"https://www.youtube.com/embed/cE84OP0Uz8E",title:"YouTube video player",frameborder:"0",allow:"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share",allowfullscreen:!0}),(0,i.kt)("h2",{id:"using-chatgpt-within-glific-via-jugalbandi-api"},"Using ChatGPT within Glific via Jugalbandi API"),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Step 1:")," Import the below sample flow from the Flow screen and click on the ",(0,i.kt)("inlineCode",{parentName:"p"},"setting")," icon to configure it."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Sample Flow")),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://storage.googleapis.com/cc-tides/GPTintegration%20(2).json"},"GPTintegration.json")),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Step 2:")," Click on ",(0,i.kt)("inlineCode",{parentName:"p"},"Flows")," from the left panel and click on the setting icon to configure the imported flow. Here's how the imported flow would look like"),(0,i.kt)("p",null,(0,i.kt)("img",{parentName:"p",src:"https://github.com/glific/docs/assets/40158831/3b73c25e-3bb3-44f4-9b8b-2fce8760a7cf",alt:"image"})),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Step 3:")," The first node is the ",(0,i.kt)("inlineCode",{parentName:"p"},"Send Message")," node, which prompts the contact to ask question which will then be sent to ChatGPT using ",(0,i.kt)("inlineCode",{parentName:"p"},"Call Webhook")," in ",(0,i.kt)("inlineCode",{parentName:"p"},"Step 6")),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Step 4:")," The second node is the ",(0,i.kt)("inlineCode",{parentName:"p"},"Wait for Response")," node with the result name ",(0,i.kt)("inlineCode",{parentName:"p"},"gpt_query"),". The response from the contact will be saved in this result and can be referenced as ",(0,i.kt)("inlineCode",{parentName:"p"},"@results.gpt_query"),"."),(0,i.kt)("p",null,(0,i.kt)("img",{parentName:"p",src:"https://github.com/glific/docs/assets/40158831/a91c2a31-55b7-4fea-a8f5-ffd8a914f942",alt:"image"})),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Step 5:")," The third node is the ",(0,i.kt)("inlineCode",{parentName:"p"},"Send Message")," which we are sending to contact while we are sending user query to ChatGPT and waiting for the response."),(0,i.kt)("p",null,(0,i.kt)("img",{parentName:"p",src:"https://github.com/glific/docs/assets/40158831/0da1319e-6a62-4dc1-a523-63fcd63304fe",alt:"image"})),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Step 6:")," Next in the ",(0,i.kt)("inlineCode",{parentName:"p"},"Call Webhook")," node we are calling ",(0,i.kt)("a",{parentName:"p",href:"https://www.jugalbandi.ai/"},"Jugalbandi")," APIs by choosing ",(0,i.kt)("inlineCode",{parentName:"p"},"FUNCTION")," in the node and adding value as ",(0,i.kt)("inlineCode",{parentName:"p"},"jugalbandi")),(0,i.kt)("p",null,(0,i.kt)("img",{parentName:"p",src:"https://github.com/glific/docs/assets/40158831/6dd12db6-3e08-4569-854b-1ae6acf22c2f",alt:"image"})),(0,i.kt)("p",null,"When invoking a webhook, the initial step is to select a suitable HTTP method, such as ",(0,i.kt)("inlineCode",{parentName:"p"},"POST"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"GET"),", or ",(0,i.kt)("inlineCode",{parentName:"p"},"PATCH"),", to perform the desired function in the interaction between the caller and the Jugalbandi API."),(0,i.kt)("p",null,"The function is then called with three key-value pairs as the function body"),(0,i.kt)("p",null,(0,i.kt)("img",{parentName:"p",src:"https://github.com/glific/docs/assets/40158831/7f509016-f7fd-43c8-83c1-b133dd95a7dc",alt:"image"})),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"url:")," URL is referencing a given end point from the ",(0,i.kt)("a",{parentName:"p",href:"https://api.jugalbandi.ai/docs"},"Jugalbandi APIs")," some examples are given below"),(0,i.kt)("p",null,(0,i.kt)("em",{parentName:"p"},"below is picture showing the list of end points")),(0,i.kt)("img",{width:"1453",alt:"Screenshot 2024-02-13 at 8 05 22\u202fPM",src:"https://github.com/glific/docs/assets/141305477/972af81e-647b-429f-90ab-8ce2f5f8e635"}),(0,i.kt)("p",null,"following shows how to use these end points in the webhook call parameter: "),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},"to use GPT3.5: ",(0,i.kt)("inlineCode",{parentName:"li"},"https://api.jugalbandi.ai/query-with-langchain-gpt3-5")),(0,i.kt)("li",{parentName:"ol"},"to use GPT4: ",(0,i.kt)("inlineCode",{parentName:"li"},"https://api.jugalbandi.ai/query-with-langchain-gpt4")),(0,i.kt)("li",{parentName:"ol"},"to use GPT4 using custom prompt: ",(0,i.kt)("inlineCode",{parentName:"li"},"https://api.jugalbandi.ai/query-with-langchain-gpt4-custom-prompt"))),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"uuid_number:"),' The "uuid_number" is a special code assigned to a file when it is uploaded through the  ',(0,i.kt)("a",{parentName:"p",href:"https://api.jugalbandi.ai/docs#/Document%20Store/upload_files_upload_files_post"},"jugalbandi API"),"  then this ",(0,i.kt)("inlineCode",{parentName:"p"},"UUID")," is used to find the relevant information from the knowledge base and gives it back to you."),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"query_string:")," user query asked in flow"),(0,i.kt)("p",null,"additionally, an extra parameter can be passed called ",(0,i.kt)("inlineCode",{parentName:"p"},"prompt:")," in the API end points which end with ",(0,i.kt)("inlineCode",{parentName:"p"},"custom-prompt"),". This is a system prompt that can be passed to the model. This enables NGOs to experiment with prompt engineering. Generally it can be used to provide guidelines or steps or explicit instructions for the LLM to process the 'query_string' being passed, like"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"to limit the length of response generated,"),(0,i.kt)("li",{parentName:"ul"},"decline to answer if the question asked is outside the scope of the documents uploaded (this prevents what is termed as hallucination by the LLMs)"),(0,i.kt)("li",{parentName:"ul"},"generate in a specific tone, ex catering to a student below the age of 15 etc."),(0,i.kt)("li",{parentName:"ul"},"anything else under the ambit of prompt engineering which allows one to get creative in eliciting responses from LLMs")),(0,i.kt)("p",null,"Additionally, you can use ",(0,i.kt)("a",{parentName:"p",href:"https://glific.github.io/docs/docs/Product%20Features/Flows/Flow%20Actions/Link%20Google%20Sheets/"},"Google sheet")," feature to store response into google sheet as this data can later be analyzed to evaluate each model's accuracy and effectiveness and help you make a decision."),(0,i.kt)("p",null,"Using the ",(0,i.kt)("a",{parentName:"p",href:"https://glific.github.io/docs/docs/Product%20Features/Flows/Flow%20Actions/Call%20a%20webhook/#checking-webhook-logs"},"webhook logs"),", you can view the logs of questions asked and responses received by ChatGPT."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Step 7:")," In the last step, the user is provided with their answer using the variable ",(0,i.kt)("inlineCode",{parentName:"p"},"@results.jugalbandi.answer"),". This variable contains the response generated by the ChatGPT from custom knowledgebase, leveraging Jugalbandi APIs"),(0,i.kt)("h2",{id:"pricing"},"Pricing"),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Via Jugalbandi")),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"No cost is involved for using jugalbandi integration in Glific. "),(0,i.kt)("li",{parentName:"ul"},"Jugalbandi has it rate limited so an increased usage might lead to responses not getting generated. "),(0,i.kt)("li",{parentName:"ul"},"To overcome rate limitation, orgs can acquire Open AI API access, and Jugalbandi team can create a separate instance and for the org and the cost will be as per usage of Open AI APIs. "),(0,i.kt)("li",{parentName:"ul"},"Jugalbandi intends to keep the usage of the platform free of cost for the foreseeable future. ")),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Cost involved in Open AI APIs")),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"The cost involved in getting responses using Open AI\u2019s APIs depends on ",(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre"},"1. The type of model being used \n2. The total number of token being processed (input + output) \n"))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://openai.com/pricing"},"https://openai.com/pricing")," contains the prices involved for each model along with details on the model"),(0,i.kt)("li",{parentName:"ul"},"Tokens roughly correspond to the number of words used",(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre"},"- For the English language, 75 words roughly comes up to 100 tokens.\n- For Indic language, tokens usually are higher than English langauge\n"))),(0,i.kt)("li",{parentName:"ul"},"To get an estimate of the tokens involved in a question + answer pair go here: ",(0,i.kt)("a",{parentName:"li",href:"https://platform.openai.com/tokenizer"},"https://platform.openai.com/tokenizer")),(0,i.kt)("li",{parentName:"ul"},"Paste the string of question, prompt and answer pair in the tokenizer to get an idea")),(0,i.kt)("p",null,"For more details on pricing refer here: ",(0,i.kt)("a",{parentName:"p",href:"https://docs.google.com/document/d/1EBNwezbZFxhz8KyNyqqiUcebyjTFWejm6OKyxGrxhBA/edit"},"https://docs.google.com/document/d/1EBNwezbZFxhz8KyNyqqiUcebyjTFWejm6OKyxGrxhBA/edit")),(0,i.kt)("h2",{id:"advanced-feature-webinar"},"Advanced Feature Webinar"),(0,i.kt)("iframe",{width:"800",height:"500",src:"https://www.youtube.com/embed/9fWOfnOFB9I",title:"YouTube video player",frameborder:"0",allow:"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share",allowfullscreen:!0}))}c.isMDXComponent=!0}}]);