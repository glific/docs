"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[8530],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>h});var a=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,o=function(e,t){if(null==e)return{};var n,a,o={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var s=a.createContext({}),p=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},c=function(e){var t=p(e.components);return a.createElement(s.Provider,{value:t},e.children)},m="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},u=a.forwardRef((function(e,t){var n=e.components,o=e.mdxType,r=e.originalType,s=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),m=p(n),u=o,h=m["".concat(s,".").concat(u)]||m[u]||d[u]||r;return n?a.createElement(h,i(i({ref:t},c),{},{components:n})):a.createElement(h,i({ref:t},c))}));function h(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var r=n.length,i=new Array(r);i[0]=u;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[m]="string"==typeof e?e:o,i[1]=l;for(var p=2;p<r;p++)i[p]=n[p];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}u.displayName="MDXCreateElement"},7379:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>m,frontMatter:()=>r,metadata:()=>l,toc:()=>p});var a=n(7462),o=(n(7294),n(3905));const r={},i="Integration with llm4dev",l={unversionedId:"Integrations/GPT answers with conversational memory",id:"Integrations/GPT answers with conversational memory",title:"Integration with llm4dev",description:"- Webhooks to facilitate retrieval augmented generation (GPT generated answers from custom knowledge bases),",source:"@site/docs/4. Integrations/GPT answers with conversational memory.md",sourceDirName:"4. Integrations",slug:"/Integrations/GPT answers with conversational memory",permalink:"/docs/docs/Integrations/GPT answers with conversational memory",draft:!1,editUrl:"https://github.com/glific/docs/tree/main/docs/4. Integrations/GPT answers with conversational memory.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Dialogflow for Natural Language Processing",permalink:"/docs/docs/Integrations/Dialogflow for Natural Language Processing"},next:{title:"GPT integration for image recognition",permalink:"/docs/docs/Integrations/GPT integration for image recognition"}},s={},p=[{value:"Steps to get started.",id:"steps-to-get-started",level:2},{value:"Uploading a knowledge base",id:"uploading-a-knowledge-base",level:2},{value:"Using in a flow",id:"using-in-a-flow",level:2}],c={toc:p};function m(e){let{components:t,...n}=e;return(0,o.kt)("wrapper",(0,a.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"integration-with-llm4dev"},"Integration with llm4dev"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Webhooks to facilitate retrieval augmented generation (GPT generated answers from custom knowledge bases), "),(0,o.kt)("li",{parentName:"ul"},"chatbot flows with conversational memory (previous conversations) "),(0,o.kt)("li",{parentName:"ul"},"scaled deployment ")),(0,o.kt)("h2",{id:"steps-to-get-started"},"Steps to get started."),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},"Go to ",(0,o.kt)("inlineCode",{parentName:"li"},"Settings")," and find ",(0,o.kt)("inlineCode",{parentName:"li"},"LLM4Dev")," Update the ",(0,o.kt)("inlineCode",{parentName:"li"},"API url")," and ",(0,o.kt)("inlineCode",{parentName:"li"},"API key")),(0,o.kt)("li",{parentName:"ol"},"For API url provide the following input \u2018",(0,o.kt)("a",{parentName:"li",href:"https://openllm.projecttech4dev.org%E2%80%99"},"https://openllm.projecttech4dev.org\u2019")),(0,o.kt)("li",{parentName:"ol"},"For API key, reach out to Glific team on discord ",(0,o.kt)("a",{parentName:"li",href:"https://discord.gg/YWgGxWJsMh"},"here")),(0,o.kt)("li",{parentName:"ol"},"Mark it ",(0,o.kt)("inlineCode",{parentName:"li"},"Active"))),(0,o.kt)("img",{width:"988",alt:"Screenshot 2024-05-02 at 2 14 23\u202fPM",src:"https://github.com/glific/docs/assets/141305477/d82a4dc9-01e4-4ca9-9606-1029c5c907dc"}),(0,o.kt)("h2",{id:"uploading-a-knowledge-base"},"Uploading a knowledge base"),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("p",{parentName:"li"},"Go to ",(0,o.kt)("inlineCode",{parentName:"p"},"Manage"))),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("p",{parentName:"li"},"Find the ",(0,o.kt)("inlineCode",{parentName:"p"},"Knowledge bases"))),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("p",{parentName:"li"},"Upload documents"),(0,o.kt)("img",{width:"1304",alt:"Screenshot 2024-05-02 at 2 18 03\u202fPM",src:"https://github.com/glific/docs/assets/141305477/cbbe762d-92fa-436e-99fc-62ceb305f0b1"})),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("p",{parentName:"li"},"Give it a category name")),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("p",{parentName:"li"},"Documents are clubbed under a ",(0,o.kt)("inlineCode",{parentName:"p"},"category id")," based on the category name")),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("p",{parentName:"li"},"This is done so as to be able to reference different knowledge bases for different programs or different tasks."),(0,o.kt)("img",{width:"586",alt:"Screenshot 2024-05-02 at 2 19 47\u202fPM",src:"https://github.com/glific/docs/assets/141305477/0578a348-d729-46f9-976b-2b1d0df2039f"}))),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Present limitations")),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},'The documents have to be in "pdf" format.')),(0,o.kt)("p",null,"The above limitations will be resolved in the next iteration of the build (in a month or so)"),(0,o.kt)("h2",{id:"using-in-a-flow"},"Using in a flow"),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},"The functionality can be accessed by calling a webhook. "),(0,o.kt)("li",{parentName:"ol"},"Follow the below specifications in the webhook node."),(0,o.kt)("li",{parentName:"ol"},"Make sure you give an appropriate webhook result name. (in the example shown below the webhook result name is ",(0,o.kt)("inlineCode",{parentName:"li"},"llm4dev_webhook")),(0,o.kt)("li",{parentName:"ol"},"choose the webhook type to be ",(0,o.kt)("inlineCode",{parentName:"li"},"Function")),(0,o.kt)("li",{parentName:"ol"},"The function name has to be \u2018llm4dev\u2019",(0,o.kt)("img",{width:"682",alt:"Screenshot 2024-05-02 at 4 48 51\u202fPM",src:"https://github.com/glific/docs/assets/141305477/70c16dc5-840b-4e4a-8c13-d70f069dd876"}))),(0,o.kt)("ol",{start:8},(0,o.kt)("li",{parentName:"ol"},"Go to function body."),(0,o.kt)("li",{parentName:"ol"},"The following webhook params can be created. ",(0,o.kt)("img",{width:"662",alt:"Screenshot 2024-05-02 at 4 52 01\u202fPM",src:"https://github.com/glific/docs/assets/141305477/5059f824-e934-4091-a598-e84033d3fde2"}))),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"\u201cquestion\u201d:\u201d\u201d,")),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"This should contant the result from the flow containing the question of the user. ")),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"\u201ccategory_id\u201d:\u201d\u201d")),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"This is the numeric value referencing the knowledge base uploaded. ")),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"\u201csystem_prompt\u201d:\u201d\u201d,")),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"This is an optional parameter."),(0,o.kt)("li",{parentName:"ul"},"This parameter to provide a prompt for the LLM to generate responses at the nodel level. "),(0,o.kt)("li",{parentName:"ul"},"Not providing this parameter will make the system fall back on a mandatory system prompt that the org can set up when creating acquiring the llm4dev API keys from the Glific team.")),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"\u201cgpt_model\u201d:\u201d\u201d, ")),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"This is an optional param, by default a model selection is done in the backend if no specific model is called out here."),(0,o.kt)("li",{parentName:"ul"},"This can be a list of models, the proper naming of which can be obtained form ",(0,o.kt)("a",{parentName:"li",href:"%5Burl%5D(https://platform.openai.com/docs/models/overview)"},"OpenAI API documentation")," ")),(0,o.kt)("ol",{start:9},(0,o.kt)("li",{parentName:"ol"},"The response of the above webhook has to be ",(0,o.kt)("inlineCode",{parentName:"li"},"@result.webhookresultname.answer"))),(0,o.kt)("img",{width:"572",alt:"Screenshot 2024-05-02 at 4 52 32\u202fPM",src:"https://github.com/glific/docs/assets/141305477/9a5f72e9-8e0b-4f88-8e76-b8e71274936b"}),(0,o.kt)("p",null,"To leverage the conversational memory, in the subsequent webhook call, following additional parameter needs to be added."),(0,o.kt)("img",{width:"709",alt:"Screenshot 2024-05-02 at 4 53 22\u202fPM",src:"https://github.com/glific/docs/assets/141305477/3a7f22c2-0d3b-41a1-b137-a833406619c5"}),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"\u201csession_id\u201d:\u201d\u201d ")),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"The value of the \u2018session_id\u2019 is to be passed as above. "),(0,o.kt)("li",{parentName:"ul"},"As the ",(0,o.kt)("inlineCode",{parentName:"li"},"session_id")," is the variable in the response to the API call, which is referencing the conversation that has taken place previously.")),(0,o.kt)("img",{width:"445",alt:"Screenshot 2024-05-02 at 2 47 24\u202fPM",src:"https://github.com/glific/docs/assets/141305477/3492740b-e668-4999-92cb-c05e32fe3faa"}),(0,o.kt)("p",null,"Demo flow: ",(0,o.kt)("a",{parentName:"p",href:"https://drive.google.com/file/d/1B6gCZ7NFg3lQqAvTsIkn8rqxHCAFRlgu/view?usp=sharing"},"https://drive.google.com/file/d/1B6gCZ7NFg3lQqAvTsIkn8rqxHCAFRlgu/view?usp=sharing")))}m.isMDXComponent=!0}}]);