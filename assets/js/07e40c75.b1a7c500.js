"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[9400],{501:(e,t,s)=>{s.r(t),s.d(t,{assets:()=>l,contentTitle:()=>o,default:()=>h,frontMatter:()=>c,metadata:()=>n,toc:()=>d});const n=JSON.parse('{"id":"Product Features/Flows/Flow Actions/Split By/Contact Field","title":"Contact Field","description":"3 minutes read","source":"@site/docs/4. Product Features/03. Flows/2. Flow Actions/Split By/02. Contact Field.md","sourceDirName":"4. Product Features/03. Flows/2. Flow Actions/Split By","slug":"/Product Features/Flows/Flow Actions/Split By/Contact Field","permalink":"/docs/docs/Product Features/Flows/Flow Actions/Split By/Contact Field","draft":false,"unlisted":false,"editUrl":"https://github.com/glific/docs/tree/main/docs/4. Product Features/03. Flows/2. Flow Actions/Split By/02. Contact Field.md","tags":[],"version":"current","sidebarPosition":2,"frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Custom Expression","permalink":"/docs/docs/Product Features/Flows/Flow Actions/Split By/Custom Expression"},"next":{"title":"Result in the Flow","permalink":"/docs/docs/Product Features/Flows/Flow Actions/Split By/Result in the Flow"}}');var i=s(4848),a=s(8453);const c={},o="Split by Contact Field",l={},d=[{value:"Sample Use Case",id:"sample-use-case",level:2},{value:"Step 1: Collect the value",id:"step-1-collect-the-value",level:3},{value:"Step 2: Save response to a contact field",id:"step-2-save-response-to-a-contact-field",level:3},{value:"Step 3: Add a Split by Contact Field node",id:"step-3-add-a-split-by-contact-field-node",level:3},{value:"Step 4: Implement the logic",id:"step-4-implement-the-logic",level:3}];function r(e){const t={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",hr:"hr",li:"li",p:"p",ul:"ul",...(0,a.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)("h3",{children:(0,i.jsx)("table",{children:(0,i.jsxs)("tr",{children:[(0,i.jsx)("td",{children:(0,i.jsx)("b",{children:"3 minutes read"})}),(0,i.jsx)("td",{style:{paddingLeft:40},children:(0,i.jsx)("b",{children:" Level: Intermediate"})}),(0,i.jsx)("td",{style:{paddingLeft:40},children:(0,i.jsx)("b",{children:"Last Updated: October 2025"})})]})})}),"\n",(0,i.jsx)(t.header,{children:(0,i.jsx)(t.h1,{id:"split-by-contact-field",children:"Split by Contact Field"})}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsx)(t.li,{children:"There may be situations where a flow needs to display different responses based on a specific attribute of the contact, such as their age group, location, or registration type."}),"\n",(0,i.jsxs)(t.li,{children:["These attributes are first stored in contact variables using the ",(0,i.jsx)(t.code,{children:"Update Contact"})," node type. Once saved, the ",(0,i.jsx)(t.code,{children:"Split by Contact Field"})," option can be used to check the stored value and guide the conversation along different paths in the flow."]}),"\n"]}),"\n",(0,i.jsxs)(t.p,{children:["Note: The end user\u2019s response should be saved using the ",(0,i.jsx)(t.code,{children:"Update Contact"})," node if you want to reuse a specific contact variable across different flows."]}),"\n",(0,i.jsx)(t.hr,{}),"\n",(0,i.jsxs)(t.p,{children:["To split the flow based on a stored value, use the ",(0,i.jsx)(t.code,{children:"Split by Contact Field"})," node."]}),"\n",(0,i.jsx)("img",{width:"584",height:"378",alt:"Screenshot 2025-10-08 at 5 42 28\u202fPM",src:"https://github.com/user-attachments/assets/97247025-6bdd-48f3-bf90-96ac13ba0b34"}),"\n",(0,i.jsx)(t.h2,{id:"sample-use-case",children:"Sample Use Case"}),"\n",(0,i.jsx)(t.p,{children:"Suppose you want to make a decision based on the age group a contact belongs to. First, save the contact\u2019s age in a contact variable. You can then use this variable in a Split by Contact Field node to branch the flow accordingly."}),"\n",(0,i.jsx)(t.h3,{id:"step-1-collect-the-value",children:"Step 1: Collect the value"}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsxs)(t.li,{children:["Add a ",(0,i.jsx)(t.code,{children:"Send Message"})," node that asks for the required attribute (for example, age or age group)."]}),"\n"]}),"\n",(0,i.jsx)("img",{width:"584",height:"445",alt:"Screenshot 2025-10-08 at 5 44 13\u202fPM",src:"https://github.com/user-attachments/assets/6f348d8f-3b4b-4af8-96f5-ad55b768e48c"}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsxs)(t.li,{children:["In the wait for response node - select ",(0,i.jsx)(t.code,{children:"has number"})," from the dropdown and provide a result name."]}),"\n"]}),"\n",(0,i.jsx)("img",{width:"581",height:"423",alt:"Screenshot 2025-10-08 at 5 45 09\u202fPM",src:"https://github.com/user-attachments/assets/c1253b45-95e3-4521-9d67-3298568298ff"}),"\n",(0,i.jsx)(t.h3,{id:"step-2-save-response-to-a-contact-field",children:"Step 2: Save response to a contact field"}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsxs)(t.li,{children:["Add an ",(0,i.jsx)(t.code,{children:"Update Contact"})," node"]}),"\n",(0,i.jsxs)(t.li,{children:["Select what to update(users can create a new contact field here) and paste ",(0,i.jsx)(t.code,{children:"@result.age"})," variable (age is the result name of  wait for response node in the given example)"]}),"\n"]}),"\n",(0,i.jsx)("img",{width:"575",height:"314",alt:"Screenshot 2025-10-08 at 5 46 23\u202fPM",src:"https://github.com/user-attachments/assets/978f8071-9a3e-47f1-adf8-f316691f7556"}),"\n",(0,i.jsx)(t.h3,{id:"step-3-add-a-split-by-contact-field-node",children:"Step 3: Add a Split by Contact Field node"}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsxs)(t.li,{children:["Insert a ",(0,i.jsx)(t.code,{children:"Split by Contact Field"})," node where branching is required."]}),"\n",(0,i.jsx)(t.li,{children:"From the contact field dropdown, select the field saved in Step 2 (age)."}),"\n"]}),"\n",(0,i.jsx)(t.p,{children:"Create a branch for each expected value. Example branches for age:"}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsxs)(t.li,{children:["\n",(0,i.jsx)(t.p,{children:"Branch 1 \u2192 1-12"}),"\n"]}),"\n",(0,i.jsxs)(t.li,{children:["\n",(0,i.jsx)(t.p,{children:"Branch 2 \u2192 13-19"}),"\n"]}),"\n",(0,i.jsxs)(t.li,{children:["\n",(0,i.jsx)(t.p,{children:"Branch 3 \u2192 20-60"}),"\n",(0,i.jsx)("img",{width:"575",height:"419",alt:"Screenshot 2025-10-08 at 5 48 36\u202fPM",src:"https://github.com/user-attachments/assets/3e3161b5-a87f-4aff-aab4-49b665cc214e"}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(t.h3,{id:"step-4-implement-the-logic",children:"Step 4: Implement the logic"}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsxs)(t.li,{children:["Branch the flow separately for Kids, Teens, and Adults based on the age group split created using the ",(0,i.jsx)(t.code,{children:"Split by Contact Field"})," node."]}),"\n"]}),"\n",(0,i.jsx)("img",{width:"584",height:"608",alt:"Screenshot 2025-10-08 at 5 49 59\u202fPM",src:"https://github.com/user-attachments/assets/29363a0c-8363-42e9-b806-3e0fcad30b3e"})]})}function h(e={}){const{wrapper:t}={...(0,a.R)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(r,{...e})}):r(e)}},8453:(e,t,s)=>{s.d(t,{R:()=>c,x:()=>o});var n=s(6540);const i={},a=n.createContext(i);function c(e){const t=n.useContext(a);return n.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function o(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:c(e.components),n.createElement(a.Provider,{value:t},e.children)}}}]);