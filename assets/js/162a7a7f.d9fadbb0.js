"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[9202],{3433:(n,e,s)=>{s.r(e),s.d(e,{assets:()=>a,contentTitle:()=>r,default:()=>h,frontMatter:()=>l,metadata:()=>i,toc:()=>o});const i=JSON.parse('{"id":"Product Features/Flows/Flow Variables/Predefined Contact Variables in Glific","title":"Predefined Contact Variables in Glific","description":"### 1 minute read &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;Intermediate","source":"@site/docs/4. Product Features/03. Flows/3. Flow Variables/01. Predefined Contact Variables in Glific.md","sourceDirName":"4. Product Features/03. Flows/3. Flow Variables","slug":"/Product Features/Flows/Flow Variables/Predefined Contact Variables in Glific","permalink":"/docs/docs/Product Features/Flows/Flow Variables/Predefined Contact Variables in Glific","draft":false,"unlisted":false,"editUrl":"https://github.com/glific/docs/tree/main/docs/4. Product Features/03. Flows/3. Flow Variables/01. Predefined Contact Variables in Glific.md","tags":[],"version":"current","sidebarPosition":1,"frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Flow Variables","permalink":"/docs/docs/category/flow-variables"},"next":{"title":"Flow variables vs Contact variables","permalink":"/docs/docs/Product Features/Flows/Flow Variables/Flow variables vs Contact variables"}}');var t=s(4848),c=s(8453);const l={},r=void 0,a={},o=[{value:"<strong>1 minute read \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0<code>Intermediate</code></strong>",id:"1-minute-read---------------------------------------------------------intermediate",level:3},{value:"Default variables",id:"default-variables",level:2}];function d(n){const e={blockquote:"blockquote",code:"code",em:"em",h2:"h2",h3:"h3",hr:"hr",li:"li",ol:"ol",p:"p",strong:"strong",ul:"ul",...(0,c.R)(),...n.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsxs)(e.blockquote,{children:["\n",(0,t.jsx)(e.h3,{id:"1-minute-read---------------------------------------------------------intermediate",children:(0,t.jsxs)(e.strong,{children:["1 minute read \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0",(0,t.jsx)(e.code,{children:"Intermediate"})]})}),"\n"]}),"\n",(0,t.jsx)(e.hr,{}),"\n",(0,t.jsx)(e.p,{children:(0,t.jsx)(e.strong,{children:"Below is the list of default contact variables which can be used without defining it explicitly."})}),"\n",(0,t.jsx)(e.h2,{id:"default-variables",children:"Default variables"}),"\n",(0,t.jsx)(e.p,{children:"Values for below variables are by default updated when contact is created in the system."}),"\n",(0,t.jsxs)(e.ul,{children:["\n",(0,t.jsxs)(e.li,{children:[(0,t.jsx)(e.code,{children:"**name**"})," -  Can access the value of it in flow, referencing it by ",(0,t.jsx)(e.code,{children:"@contact.name"})]}),"\n",(0,t.jsxs)(e.li,{children:[(0,t.jsx)(e.code,{children:"**phone**"})," - Can access the value of it in flow, referencing it by ",(0,t.jsx)(e.code,{children:"@contact.phone"})]}),"\n",(0,t.jsxs)(e.li,{children:[(0,t.jsx)(e.code,{children:"**id**"})," - Can access the value of it in flow, referencing it by",(0,t.jsx)(e.code,{children:"@contact.id"})]}),"\n"]}),"\n",(0,t.jsx)(e.p,{children:"Below variable values will be updated once the user provides the response in the flow."}),"\n",(0,t.jsxs)(e.ul,{children:["\n",(0,t.jsxs)(e.li,{children:["\n",(0,t.jsxs)(e.p,{children:[(0,t.jsx)(e.strong,{children:"language"})," - Can access the value of it in flow by ",(0,t.jsx)(e.code,{children:"@contact.language"})]}),"\n"]}),"\n",(0,t.jsxs)(e.li,{children:["\n",(0,t.jsxs)(e.p,{children:[(0,t.jsx)(e.strong,{children:"gender"})," - Can access the gender of the contact (Female/Male/Other) in a flow by referencing it with ",(0,t.jsx)(e.code,{children:"@contact.gender"})]}),"\n"]}),"\n",(0,t.jsxs)(e.li,{children:["\n",(0,t.jsxs)(e.p,{children:[(0,t.jsx)(e.strong,{children:"status"})," - Can access the WhatsApp connection status of a contact in a flow by referencing it with ",(0,t.jsx)(e.code,{children:"@contact.status"})]}),"\n",(0,t.jsxs)(e.p,{children:[(0,t.jsx)(e.em,{children:"Values"}),":"]}),"\n",(0,t.jsxs)(e.ol,{children:["\n",(0,t.jsxs)(e.li,{children:["\n",(0,t.jsx)(e.p,{children:"processing \u2013 Status is being verified."}),"\n"]}),"\n",(0,t.jsxs)(e.li,{children:["\n",(0,t.jsx)(e.p,{children:"valid \u2013 Contact is active and reachable."}),"\n"]}),"\n",(0,t.jsxs)(e.li,{children:["\n",(0,t.jsx)(e.p,{children:"invalid \u2013 Contact number is incorrect or unreachable."}),"\n"]}),"\n",(0,t.jsxs)(e.li,{children:["\n",(0,t.jsx)(e.p,{children:"blocked \u2013 Contact has blocked the number."}),"\n"]}),"\n",(0,t.jsxs)(e.li,{children:["\n",(0,t.jsx)(e.p,{children:"failed \u2013 Message delivery failed."}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(e.li,{children:["\n",(0,t.jsxs)(e.p,{children:[(0,t.jsx)(e.strong,{children:"optin status"})," - Can access the opt-in status of a contact in a flow by referencing it with",(0,t.jsx)(e.code,{children:"@contact.optin_status"})]}),"\n"]}),"\n",(0,t.jsxs)(e.li,{children:["\n",(0,t.jsxs)(e.p,{children:[(0,t.jsx)(e.strong,{children:"optin time"})," - Can access the contact's opt-in time in a flow by referencing it with ",(0,t.jsx)(e.code,{children:"@contact.optin_time"})]}),"\n"]}),"\n",(0,t.jsxs)(e.li,{children:["\n",(0,t.jsxs)(e.p,{children:[(0,t.jsx)(e.strong,{children:"optout time"})," - Can access the contact's opt-out time in a flow by referencing it with ",(0,t.jsx)(e.code,{children:"@contact.optout_time"})]}),"\n"]}),"\n",(0,t.jsxs)(e.li,{children:["\n",(0,t.jsxs)(e.p,{children:[(0,t.jsx)(e.strong,{children:"optin method"})," - Can access the mode of opt-in for a contact in a flow by referencing it with",(0,t.jsx)(e.code,{children:"@contact.optin_method"})]}),"\n"]}),"\n",(0,t.jsxs)(e.li,{children:["\n",(0,t.jsxs)(e.p,{children:[(0,t.jsx)(e.strong,{children:"bsp status"})," - Can access the Gupshup status of the current session in a flow by referencing it with ",(0,t.jsx)(e.code,{children:"@contact.bsp_status"})]}),"\n",(0,t.jsx)(e.p,{children:(0,t.jsx)(e.em,{children:"Values:"})}),"\n",(0,t.jsxs)(e.ol,{children:["\n",(0,t.jsxs)(e.li,{children:["\n",(0,t.jsx)(e.p,{children:"none \u2013 No active session."}),"\n"]}),"\n",(0,t.jsxs)(e.li,{children:["\n",(0,t.jsx)(e.p,{children:"session \u2013 Active session is ongoing."}),"\n"]}),"\n",(0,t.jsxs)(e.li,{children:["\n",(0,t.jsx)(e.p,{children:"session_and_hsm \u2013 Active session with HSM (High-Structured Message)."}),"\n"]}),"\n",(0,t.jsxs)(e.li,{children:["\n",(0,t.jsx)(e.p,{children:"hsm \u2013 Only HSM messages are allowed."}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(e.li,{children:["\n",(0,t.jsxs)(e.p,{children:[(0,t.jsx)(e.strong,{children:"contact fields"})," Can access the custom field values of a contact in a flow ",(0,t.jsx)(e.code,{children:"@contact.fields"})]}),"\n"]}),"\n",(0,t.jsxs)(e.li,{children:["\n",(0,t.jsxs)(e.p,{children:[(0,t.jsx)(e.strong,{children:"list profiles"})," - Can access all available profiles of a contact (all contact profiles of a user) in a flow by referencing them with ",(0,t.jsx)(e.code,{children:"@contact.list_profiles"})]}),"\n"]}),"\n",(0,t.jsxs)(e.li,{children:["\n",(0,t.jsxs)(e.p,{children:[(0,t.jsx)(e.strong,{children:"in groups"})," - Can access the list of collections a contact is a member of in a flow by referencing it with ",(0,t.jsx)(e.code,{children:"@contact.in_groups"})]}),"\n"]}),"\n",(0,t.jsxs)(e.li,{children:["\n",(0,t.jsxs)(e.p,{children:[(0,t.jsx)(e.strong,{children:"active profile id"})," - Can access the active profile ID of a contact in a flow by referencing it with",(0,t.jsx)(e.code,{children:"@contact.active_profile_id"})]}),"\n"]}),"\n",(0,t.jsxs)(e.li,{children:["\n",(0,t.jsxs)(e.p,{children:[(0,t.jsx)(e.strong,{children:"last message"})," - Can access the last inbound message time of a contact in a flow by referencing it with",(0,t.jsx)(e.code,{children:"@contact.last_message_at"})]}),"\n"]}),"\n"]})]})}function h(n={}){const{wrapper:e}={...(0,c.R)(),...n.components};return e?(0,t.jsx)(e,{...n,children:(0,t.jsx)(d,{...n})}):d(n)}},8453:(n,e,s)=>{s.d(e,{R:()=>l,x:()=>r});var i=s(6540);const t={},c=i.createContext(t);function l(n){const e=i.useContext(c);return i.useMemo((function(){return"function"==typeof n?n(e):{...e,...n}}),[e,n])}function r(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(t):n.components||t:l(n.components),i.createElement(c.Provider,{value:e},n.children)}}}]);