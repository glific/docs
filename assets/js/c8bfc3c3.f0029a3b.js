"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[1958],{8607:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>o,contentTitle:()=>a,default:()=>b,frontMatter:()=>r,metadata:()=>l,toc:()=>c});var t=s(4848),i=s(8453);const r={},a=void 0,l={id:"Product Features/Flows/Flow Variables/Predefined Contact Variables in Glific",title:"Predefined Contact Variables in Glific",description:"### 1 minute read &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;Intermediate",source:"@site/docs/3. Product Features/03. Flows/3. Flow Variables/01. Predefined Contact Variables in Glific.md",sourceDirName:"3. Product Features/03. Flows/3. Flow Variables",slug:"/Product Features/Flows/Flow Variables/Predefined Contact Variables in Glific",permalink:"/docs/docs/Product Features/Flows/Flow Variables/Predefined Contact Variables in Glific",draft:!1,unlisted:!1,editUrl:"https://github.com/glific/docs/tree/main/docs/3. Product Features/03. Flows/3. Flow Variables/01. Predefined Contact Variables in Glific.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Flow Variables",permalink:"/docs/docs/category/flow-variables"},next:{title:"Flow variables vs Contact variables",permalink:"/docs/docs/Product Features/Flows/Flow Variables/Flow variables vs Contact variables"}},o={},c=[{value:"<strong>1 minute read \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0<code>Intermediate</code></strong>",id:"1-minute-read---------------------------------------------------------intermediate",level:3},{value:"Default variables",id:"default-variables",level:2}];function d(e){const n={blockquote:"blockquote",code:"code",h2:"h2",h3:"h3",hr:"hr",li:"li",p:"p",strong:"strong",ul:"ul",...(0,i.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsxs)(n.blockquote,{children:["\n",(0,t.jsx)(n.h3,{id:"1-minute-read---------------------------------------------------------intermediate",children:(0,t.jsxs)(n.strong,{children:["1 minute read \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0",(0,t.jsx)(n.code,{children:"Intermediate"})]})}),"\n"]}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Below is the list of default contact variables which can be used without defining it explicitly."})}),"\n",(0,t.jsx)(n.h2,{id:"default-variables",children:"Default variables"}),"\n",(0,t.jsx)(n.p,{children:"Values for below variables are by default updated when contact is created in the system."}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"**name**"})," -  Can access the value of it in flow, referencing it by ",(0,t.jsx)(n.code,{children:"@contact.name"})]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"**phone**"})," - Can access the value of it in flow, referencing it by ",(0,t.jsx)(n.code,{children:"@contact.phone"})]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"**id**"})," - Can access the value of it in flow, referencing it by",(0,t.jsx)(n.code,{children:"@contact.id"})]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"Below variable values will be updated once the user provides the response in the flow."}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"language"})," - Can access the value of it in flow by ",(0,t.jsx)(n.code,{children:"@contact.language"})]}),"\n"]})]})}function b(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}},8453:(e,n,s)=>{s.d(n,{R:()=>a,x:()=>l});var t=s(6540);const i={},r=t.createContext(i);function a(e){const n=t.useContext(r);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:a(e.components),t.createElement(r.Provider,{value:n},e.children)}}}]);