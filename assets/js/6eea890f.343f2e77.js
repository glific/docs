"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[9093],{1347:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>d,contentTitle:()=>a,default:()=>h,frontMatter:()=>i,metadata:()=>s,toc:()=>l});const s=JSON.parse('{"id":"Starter Kit/12 Pre-launch Chatbot Checks","title":"12 Pre-launch Chatbot Checks","description":"### 3 minute read &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; Beginner","source":"@site/docs/3. Starter Kit/12 Pre-launch Chatbot Checks.md","sourceDirName":"3. Starter Kit","slug":"/Starter Kit/12 Pre-launch Chatbot Checks","permalink":"/docs/Starter Kit/12 Pre-launch Chatbot Checks","draft":false,"unlisted":false,"editUrl":"https://github.com/glific/docs/tree/main/docs/3. Starter Kit/12 Pre-launch Chatbot Checks.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Migration to Glific","permalink":"/docs/Pre Onboarding/Migration to Glific"},"next":{"title":"Send a link of a specific flow to new contacts to join the BOT","permalink":"/docs/Starter Kit/Send a link of a specific flow to new contacts to join the BOT"}}');var o=n(4848),r=n(8453);const i={},a=void 0,d={},l=[{value:"<strong>3 minute read \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 <code>Beginner</code></strong>",id:"3-minute-read-------------------------------------------------------------beginner",level:3}];function c(e){const t={blockquote:"blockquote",code:"code",h3:"h3",p:"p",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,r.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsxs)(t.blockquote,{children:["\n",(0,o.jsx)(t.h3,{id:"3-minute-read-------------------------------------------------------------beginner",children:(0,o.jsxs)(t.strong,{children:["3 minute read \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 ",(0,o.jsx)(t.code,{children:"Beginner"})]})}),"\n"]}),"\n",(0,o.jsx)(t.p,{children:(0,o.jsx)(t.strong,{children:"Designing chatbots is an iterative process, and with every launch or pilot, you learn new things and make changes. But if you are launching your chatbot for the first time with your users, here are 12 quick things you need to cross check,to ensure that you have checked in all basic things for your Bot. It shouldn't take you more than 10 minutes to ensure everything is in place."})}),"\n",(0,o.jsxs)(t.table,{children:[(0,o.jsx)(t.thead,{children:(0,o.jsxs)(t.tr,{children:[(0,o.jsx)(t.th,{children:"Check to be done"}),(0,o.jsx)(t.th,{children:"Why it is important"})]})}),(0,o.jsxs)(t.tbody,{children:[(0,o.jsxs)(t.tr,{children:[(0,o.jsx)(t.td,{children:"Consent is collected at the beginning of the user journey on the chatbot, and their response is saved in the Contact profile"}),(0,o.jsxs)(t.td,{children:["The first message that a user receives upon joining the bot should be a welcome message followed by a consent message. Here are a few guidelines for designing your consent message: ",(0,o.jsxs)("ul",{children:[" ",(0,o.jsx)("li",{children:"Clearly mention the purpose of the bot (if needed- name of the organization/ program too)"}),(0,o.jsx)("li",{children:'Clearly ask the user if they would like to receive messages from the bot (You can provide an interactive message with a "Yes" or \ud83d\udc4d\ud83c\udffc button). '}),(0,o.jsx)("li",{children:"Users should have an option to opt out. Therefore, add the keyword in the footer through which users can opt out from the bot."})]}),' Save the user\'s consent status using the "Update Contact" node, as you won\u2019t be able to send messages to the user unless their opt-in is obtained and saved.']})]}),(0,o.jsxs)(t.tr,{children:[(0,o.jsx)(t.td,{children:"Key information (e.g., name, city, etc.) is reconfirmed with the user and saved in the Contact profile"}),(0,o.jsx)(t.td,{children:'Any important user information collected during flows, such as Name, Language, Training Group, City, etc., that will be used in the future to define the user experience should be saved in the contact profile using the "Update Contact" node. Since this information will be reused and may influence conversations, it is a good practice to reconfirm it with the user before saving.'})]}),(0,o.jsxs)(t.tr,{children:[(0,o.jsx)(t.td,{children:"Answers are captured immediately after the question is asked"}),(0,o.jsx)(t.td,{children:'A Question node should always be followed by a "Wait for Response" node to capture user responses and proceed effectively. Otherwise, the flow may confuse the user or fail to progress properly.'})]}),(0,o.jsxs)(t.tr,{children:[(0,o.jsx)(t.td,{children:"User is hitting no dead ends in the flow"}),(0,o.jsx)(t.td,{children:'Ensure that the user does not encounter any dead ends in the bot, unless you intentionally want to end the flow at that point. This is especially important for interactive messages\u2014if a user types something other than the options provided, the flow should not end for them. In such cases, connect the "Others" option to a node that informs the user about what is expected and redirects them back to the main question. Then, wait for their response to ensure the flow can proceed smoothly.'})]}),(0,o.jsxs)(t.tr,{children:[(0,o.jsx)(t.td,{children:"Chatbot-initiated flows always start with HSM messages"}),(0,o.jsx)(t.td,{children:"Since you cannot determine how many of your users are within the session window, it is recommended that all chatbot-initiated flows start with an HSM message. This is also why you would encounter a warning on Glific platfprm when attempting to set a flow trigger where the first message is not an HSM message."})]}),(0,o.jsxs)(t.tr,{children:[(0,o.jsx)(t.td,{children:"Proper nomenclature is consistently used throughout"}),(0,o.jsx)(t.td,{children:"Use appropriate names for Flows, Keywords, Contact variables, Result variables, Collections and labels to make it easy to refer them in the future."})]}),(0,o.jsxs)(t.tr,{children:[(0,o.jsx)(t.td,{children:"Content is translated in all required languages"}),(0,o.jsx)(t.td,{children:"If the bot is in multiple languages, do ensure all nodes (including interactive messages) are translated"})]}),(0,o.jsxs)(t.tr,{children:[(0,o.jsx)(t.td,{children:"Translations are included in the Wait for Response nodes"}),(0,o.jsx)(t.td,{children:'If the bot supports multiple languages, the "Wait for Response" node following an interactive message should include the translated options as well. Otherwise, the interactive messages will only work in the default language and not in other languages.'})]}),(0,o.jsxs)(t.tr,{children:[(0,o.jsx)(t.td,{children:"Collections are created wherever needed to group users efficiently"}),(0,o.jsx)(t.td,{children:"Create collections wherever there is a need to engage repeatedly with a group of users sharing certain common traits (or sometimes not). Collections are typically formed based on factors like region, program, age, course selection, etc."})]}),(0,o.jsxs)(t.tr,{children:[(0,o.jsx)(t.td,{children:"Labels are added wherever data needs to be captured for easier tracking"}),(0,o.jsx)(t.td,{children:"While all your messages and user data are stored in BigQuery, adding labels will make it much easier to track and organize the data. Therefore, make sure to add labels while creating flows to enable efficient data usage later."})]}),(0,o.jsxs)(t.tr,{children:[(0,o.jsx)(t.td,{children:"Messages are kept concise, user-friendly, and conversational"}),(0,o.jsx)(t.td,{children:"It is recommended to keep messages concise and conversational. Use emoticons, bold, or italics where appropriate to add a human touch to the chatbot experience."})]}),(0,o.jsxs)(t.tr,{children:[(0,o.jsx)(t.td,{children:"Testing- Testing- Testing"}),(0,o.jsx)(t.td,{children:"Test the chatbot internally with at least 3 to 5 people on mobile phones (not on Glific platform) before sharing it with actual users"})]})]})]})]})}function h(e={}){const{wrapper:t}={...(0,r.R)(),...e.components};return t?(0,o.jsx)(t,{...e,children:(0,o.jsx)(c,{...e})}):c(e)}},8453:(e,t,n)=>{n.d(t,{R:()=>i,x:()=>a});var s=n(6540);const o={},r=s.createContext(o);function i(e){const t=s.useContext(r);return s.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:i(e.components),s.createElement(r.Provider,{value:t},e.children)}}}]);