"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[5441],{4712:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>o,contentTitle:()=>c,default:()=>h,frontMatter:()=>i,metadata:()=>a,toc:()=>l});const a=JSON.parse('{"id":"Product Features/Flows/Flow Variables/Create a Counter Variable in a Flow","title":"Create a Counter Variable in a Flow","description":"3 minutes read","source":"@site/docs/4. Product Features/03. Flows/3. Flow Variables/06. Create a Counter Variable in a Flow.md","sourceDirName":"4. Product Features/03. Flows/3. Flow Variables","slug":"/Product Features/Flows/Flow Variables/Create a Counter Variable in a Flow","permalink":"/docs/docs/Product Features/Flows/Flow Variables/Create a Counter Variable in a Flow","draft":false,"unlisted":false,"editUrl":"https://github.com/glific/docs/tree/main/docs/4. Product Features/03. Flows/3. Flow Variables/06. Create a Counter Variable in a Flow.md","tags":[],"version":"current","sidebarPosition":6,"frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Parent and Child variable","permalink":"/docs/docs/Product Features/Flows/Flow Variables/Parent and Child variable"},"next":{"title":"Others","permalink":"/docs/docs/category/others"}}');var r=n(4848),s=n(8453);const i={},c="Create a Counter Variable in a Flow",o={},l=[{value:"Why use a counter variable?",id:"why-use-a-counter-variable",level:2},{value:"How to Create a Counter Variable",id:"how-to-create-a-counter-variable",level:2},{value:"1. Initialize the counter",id:"1-initialize-the-counter",level:3},{value:"2. Increment the counter",id:"2-increment-the-counter",level:3},{value:"3. Fetch the counter value",id:"3-fetch-the-counter-value",level:3},{value:"4. Use Split by Contact Field",id:"4-use-split-by-contact-field",level:3},{value:"Advanced Example: Adding Two Counters",id:"advanced-example-adding-two-counters",level:3}];function d(e){const t={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",hr:"hr",li:"li",p:"p",ul:"ul",...(0,s.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)("h3",{children:(0,r.jsx)("table",{children:(0,r.jsxs)("tr",{children:[(0,r.jsx)("td",{children:(0,r.jsx)("b",{children:"3 minutes read"})}),(0,r.jsx)("td",{style:{paddingLeft:40},children:(0,r.jsx)("b",{children:" Level: Intermediate"})}),(0,r.jsx)("td",{style:{paddingLeft:40},children:(0,r.jsx)("b",{children:"Last Updated: October 2025"})})]})})}),"\n",(0,r.jsx)(t.header,{children:(0,r.jsx)(t.h1,{id:"create-a-counter-variable-in-a-flow",children:"Create a Counter Variable in a Flow"})}),"\n",(0,r.jsx)(t.p,{children:"In some cases, a user may need to keep track of how many times an action has been performed within a flow. This can be useful for scenarios such as recording the number of reminders sent, limiting attempts in a registration process, or keeping a running score in a quiz. A counter variable serves this purpose by incrementing its value whenever a specified action occurs."}),"\n",(0,r.jsxs)(t.p,{children:["Users can create a variable (refer to ",(0,r.jsx)(t.a,{href:"https://glific.github.io/docs/docs/Product%20Features/Flows/Flow%20Variables/Flow%20variables%20vs%20Contact%20variables/",children:"Flow variables vs Contact variables"})," document to know more about how variables are created in a flow) and increment it with expression."]}),"\n",(0,r.jsx)(t.h2,{id:"why-use-a-counter-variable",children:"Why use a counter variable?"}),"\n",(0,r.jsxs)(t.ul,{children:["\n",(0,r.jsx)(t.li,{children:"To track repeated actions (e.g., number of nudges/reminders sent)."}),"\n",(0,r.jsx)(t.li,{children:"To limit actions after a certain number of attempts (e.g., stop after 3 failed tries)."}),"\n",(0,r.jsx)(t.li,{children:"To measure engagement (e.g., how many times a user participates in an activity)."}),"\n",(0,r.jsx)(t.li,{children:"To track quiz scores or activity points (e.g., increasing score when a user answers correctly)."}),"\n"]}),"\n",(0,r.jsx)(t.h2,{id:"how-to-create-a-counter-variable",children:"How to Create a Counter Variable"}),"\n",(0,r.jsx)(t.h3,{id:"1-initialize-the-counter",children:"1. Initialize the counter"}),"\n",(0,r.jsxs)(t.ul,{children:["\n",(0,r.jsxs)(t.li,{children:["Add an ",(0,r.jsx)(t.code,{children:"Update Contact"})," node."]}),"\n",(0,r.jsxs)(t.li,{children:["Select ",(0,r.jsx)(t.code,{children:"counter"})," from the dropdown in what to update field.(Users can also create a contact variable with a different name for the counter.)"]}),"\n",(0,r.jsx)(t.li,{children:"Enter the value as Zero(This ensures that if no value exists yet, it starts from 0),  this may vary depending on the requirements."}),"\n"]}),"\n",(0,r.jsx)("img",{width:"466",height:"264",alt:"Screenshot 2025-10-08 at 1 58 45\u202fPM",src:"https://github.com/user-attachments/assets/f75e8cc4-2aa0-4dfb-b398-6f6305ca168b"}),"\n",(0,r.jsx)(t.h3,{id:"2-increment-the-counter",children:"2. Increment the counter"}),"\n",(0,r.jsxs)(t.ul,{children:["\n",(0,r.jsx)(t.li,{children:"Use case: Nudging the user when no response is received. If the nudge has already been sent thrice, we stop further nudges. To track how many times a nudge has been sent, we use a counter."}),"\n",(0,r.jsx)(t.li,{children:"Add an Update Contact node after a nudge has been sent."}),"\n",(0,r.jsxs)(t.li,{children:["Use the function -  ",(0,r.jsx)(t.code,{children:"<%= @contact.fields.counter + 1 %>"})]}),"\n"]}),"\n",(0,r.jsx)("img",{width:"467",height:"266",alt:"Screenshot 2025-10-08 at 2 00 10\u202fPM",src:"https://github.com/user-attachments/assets/48de322f-b214-476e-ad1b-6f18440a0ada"}),"\n",(0,r.jsx)(t.p,{children:"A variable counter incremented each time the user reaches this node."}),"\n",(0,r.jsx)(t.h3,{id:"3-fetch-the-counter-value",children:"3. Fetch the counter value"}),"\n",(0,r.jsxs)(t.ul,{children:["\n",(0,r.jsxs)(t.li,{children:["The value of the variable counter can be fetched anywhere with syntax ",(0,r.jsx)(t.code,{children:"@contact.fieds.counter"})]}),"\n"]}),"\n",(0,r.jsx)(t.h3,{id:"4-use-split-by-contact-field",children:"4. Use Split by Contact Field"}),"\n",(0,r.jsxs)(t.ul,{children:["\n",(0,r.jsxs)(t.li,{children:["\n",(0,r.jsxs)(t.p,{children:["Add a ",(0,r.jsx)(t.code,{children:"Split by Contact"})," Field node to split the flow based on the counter incremented."]}),"\n"]}),"\n",(0,r.jsxs)(t.li,{children:["\n",(0,r.jsx)(t.p,{children:"Example: If counter \u2265 3, stop nudging the user."}),"\n",(0,r.jsx)("img",{width:"465",height:"315",alt:"Screenshot 2025-10-08 at 2 04 21 PM",src:"https://github.com/user-attachments/assets/b32978f2-8846-4c90-b069-797baa6f31cd"}),"\n",(0,r.jsx)("br",{}),"\n",(0,r.jsx)("img",{width:"471",height:"320",alt:"Screenshot 2025-10-08 at 2 04 45 PM",src:"https://github.com/user-attachments/assets/3eece152-8cda-4774-a47a-24ba2201847c"}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(t.hr,{}),"\n",(0,r.jsx)(t.h3,{id:"advanced-example-adding-two-counters",children:"Advanced Example: Adding Two Counters"}),"\n",(0,r.jsxs)(t.p,{children:["In cases where different counters are maintained, their values can be combined:\n",(0,r.jsx)(t.code,{children:"<%= (@contact.fields.counter || 0) + (@contact.fields.add_counter || 0) %>"})]})]})}function h(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}},8453:(e,t,n)=>{n.d(t,{R:()=>i,x:()=>c});var a=n(6540);const r={},s=a.createContext(r);function i(e){const t=a.useContext(s);return a.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function c(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:i(e.components),a.createElement(s.Provider,{value:t},e.children)}}}]);